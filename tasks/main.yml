---

- name: apt | Install openvpn requirements
  apt:
    name:
    - openvpn
    - udev
    - openssl
    state: present
    update_cache: yes
  when: ansible_os_family == 'Debian' or ansible_os_family == 'Kali'
  register: pkg_result
  until: pkg_result is success
- name: apt | make openvpn autostart
  replace:
    dest: /etc/default/openvpn
    regexp: "^#AUTOSTART=\"all\""
    replace: "AUTOSTART=\"all\""
    mode: '0644'
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: yum | Install openvpn requirements
  yum:
    name:
    - openvpn
    - udev
    - openssl
    state: present
  when: ansible_os_family == "RedHat"
  register: pkg_result
  until: pkg_result is success

## FAILED! => {"changed": false, "failed": true, "msg": "Error when trying to enable openvpn: rc=1
##      Failed to execute operation: No such file or directory\n"}
##      per vpn activation w systemd. see at EOF
#- name: Redhat | Ensure services are enabled on boot.
#  service: name=openvpn enabled=yes
#  when: ansible_os_family == "RedHat"

- name: Alpine | Install openvpn requirements
  apk:
    name:
    - openvpn
    - udev
    - openssl
    state: present
  when: ansible_os_family == "Alpine"
  register: pkg_result
  until: pkg_result is success
- name: map local config to {{ openvpnclient_confdir }}/openvpn.conf
  file:
    src: "{{ openvpnclient_confdir }}/{{ inventory_hostname }}.conf"
    dest: "{{ openvpnclient_confdir }}/openvpn.conf"
    mode: '0644'
    state: link
    force: yes
  ignore_errors: true
  when: ansible_os_family == "Alpine"

- include: darwin.yml
  when: ansible_os_family == 'Darwin'
- include: openbsd.yml
  when: ansible_system == 'OpenBSD'

- name: push configuration
  copy: "src={{ item }} dest={{ openvpnclient_confdir }}/ mode=0400"
  with_items: "{{ openvpn_config_files }}"
  notify:
    - restart openvpn
    - restart openvpn synology
    - restart openvpn - systemd
    - openvpn restart - darwin
    - openvpn restart - openbsd
  when: openvpn_config_files is defined

- name: push keys
  copy: "src={{ item }} dest={{ openvpnclient_confdir }}/keys/ mode=0400"
  with_items: "{{ openvpn_config_keys }}"
  notify:
    - restart openvpn
    - restart openvpn synology
    - restart openvpn - systemd
    - openvpn restart - darwin
    - openvpn restart - openbsd
  when: openvpn_config_keys is defined

- name: Create config for login/pass authenticated users
  template:
    src: openvpn-user.ovpn
    dest: "{{ openvpnclient_confdir }}/openvpn-{{ item.u }}.{{ openvpnclient_ext }}"
    mode: 0400
  with_items: "{{ openvpn_config_users }}"
  notify:
    - restart openvpn
    - restart openvpn synology
    - restart openvpn - systemd
    - openvpn restart - darwin
    - openvpn restart - openbsd
  when: openvpn_config_users is defined

- name: Set openvpn keys files
  blockinfile:
    dest: "{{ openvpnclient_confdir }}/keys/login-{{ item.u }}.txt"
    mode: 0400
    create: yes
#    marker: ''
    block: |
      {{ item.u }}
      {{ item.p }}
  with_items: "{{ openvpn_config_users }}"
  notify:
    - restart openvpn
    - restart openvpn synology
    - restart openvpn - systemd
    - openvpn restart - darwin
    - openvpn restart - openbsd
  when: openvpn_config_users is defined

## http://fedoraproject.org/wiki/Openvpn
- name: Check if /lib/systemd/system/openvpn@.service exists
  stat: path='/lib/systemd/system/openvpn@.service'
  register: systemd
- name: symlink starting config - systemd only
  file:
    src: '/lib/systemd/system/openvpn@.service'
    dest: "/etc/systemd/system/openvpn@{{ inventory_hostname }}.service"
    state: link
  when: systemd.stat.exists
  register: out
- debug: var=out

- name: Debian | Ensure service openvpn are enabled and started
  service: name=openvpn enabled=yes state=started
  when: ansible_os_family == "Debian"
- name: RedHat | Ensure service openvpn@<config> are enabled and started
  service:
    name: "openvpn-server@{{ item }}"
    enabled: yes
    state: started
  with_items: "{{ openvpnclient_services | default('localhost') }}"
  when: >
    ansible_os_family == "RedHat" and
    not (ansible_virtualization_type is defined and
      (ansible_virtualization_type == "docker" or ansible_virtualization_type == "VirtualPC")
    )

## Not valid on bare system as there is no default config ...
#- name: Ensure services are enabled and started - systemd
### NOK
### FAILED! => {"changed": false, "failed": true, "msg": "Error when trying to enable openvpn@HOST: rc=1
##      Failed to execute operation: Too many levels of symbolic links\n"}
##  service: name="openvpn@{{ inventory_hostname }}" enabled=yes state=started
### OK
#  service: name="openvpn@{{ inventory_hostname }}" state=started
#  when: ansible_system == "Linux" and ansible_service_mgr == 'systemd'

- block:
    - name: Ensure /etc/aide/aide.conf.d directory exists
      file: dest=/etc/aide/aide.conf.d state=directory mode=0755
    - name: add additional aide HIDS configuration
      copy: src=99_aide_local_openvpn dest=/etc/aide/aide.conf.d/99_aide_local_openvpn mode=0644
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
